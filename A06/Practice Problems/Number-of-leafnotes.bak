;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-abbr-reader.ss" "lang")((modname Number-of-leafnotes) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor mixed-fraction #f #t none #f () #t)))
(define-struct node (key left right))
;; A Node is a (make-node Nat BT BT)
;; A binary tree (BT) is one of:
;; * empty
;; * Node

(define test-trees (make-node 5 (makde node 1 (makke 3 empty empty) (make-node 6 empty empty)
                                (make-node 1 (make-node 1 (make-node 4 empty empty) (make-node 6 empty empty))
                                           (make-node 3 empty empty)))))

;; (count-leave t) consumes a binary tree and produces the number of leaf notes

;;count-leave: BT -> Nat
(define (count-leave t)
  (cond
    [(empty? t) 1]
    [else (+ (cond [(node? t) 0])
             (count-leave (node-left t))
             (count-leave (node-right t)))]))

(count-leave (make-node 7 (make-node 8 (make-node 9 empty empty) (make-node 0 empty empty)) (make-node 8 empty empty))) 


(count-leave test-trees)